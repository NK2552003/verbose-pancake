"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/fluid-shader.tsx":
/*!*****************************************!*\
  !*** ./src/components/fluid-shader.tsx ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FluidShader)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst TARGET_FPS = 30;\nconst FRAME_INTERVAL = 1000 / TARGET_FPS;\nconst MAX_DPR = 1.5;\nconst CANVAS_SCALE = 0.75;\nfunction debounce(func, wait) {\n    let timeout = null;\n    return ()=>{\n        timeout && clearTimeout(timeout);\n        timeout = setTimeout(func, wait);\n    };\n}\nfunction FluidShader() {\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FluidShader.useEffect\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            let renderer = null;\n            const dpr = Math.min(MAX_DPR, window.devicePixelRatio) * CANVAS_SCALE;\n            const resize = {\n                \"FluidShader.useEffect.resize\": ()=>{\n                    if (!canvas) return;\n                    const { innerWidth: width, innerHeight: height } = window;\n                    canvas.width = width * dpr;\n                    canvas.height = height * dpr;\n                    canvas.style.width = \"\".concat(width, \"px\");\n                    canvas.style.height = \"\".concat(height, \"px\");\n                    renderer === null || renderer === void 0 ? void 0 : renderer.updateScale(dpr);\n                }\n            }[\"FluidShader.useEffect.resize\"];\n            const debouncedResize = debounce(resize, 100);\n            window.addEventListener(\"resize\", debouncedResize);\n            const fragmentShaderSource = \"#version 300 es\\n    precision mediump float;\\n    out vec4 O;\\n    uniform float time;\\n    uniform vec2 resolution;\\n    \\n    float rnd(vec2 p) {\\n        p = fract(p * vec2(12.9898, 78.233));\\n        return fract(p.x * p.y * (p.x + p.y));\\n    }\\n\\n    float noise(vec2 p) {\\n        vec2 i = floor(p), f = fract(p);\\n        float a = rnd(i), b = rnd(i + vec2(1,0));\\n        float c = rnd(i + vec2(0,1)), d = rnd(i + vec2(1,1));\\n        vec2 u = f * f * (3.0 - 2.0 * f);\\n        return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\\n    }\\n\\n    float fbm(vec2 p) {\\n        float t = 0.0, a = 0.5;\\n        mat2 m = mat2(0.8, 0.6, -0.6, 0.8);\\n        for (int i = 0; i < 3; i++) {\\n            t += a * noise(p);\\n            p *= 2.0 * m;\\n            a *= 0.5;\\n        }\\n        return t * 2.0;\\n    }\\n\\n    void main() {\\n        vec2 uv = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\\n        float t = time * 0.5;\\n        \\n        float n = fbm(uv * 1.5 + vec2(t * 0.3, t * 0.2));\\n        float r = fbm(uv * 2.0 + n + vec2(t * 0.1, t * 0.3));\\n        float b = fbm(uv * 2.5 - n + vec2(t * 0.2, t * 0.4));\\n        \\n        vec3 col = vec3(r * 0.5, n * 0.8, b * 0.9);\\n        col = clamp(col * 0.8 + 0.2, 0.0, 1.0);\\n        O = vec4(col, 1.0);\\n    }\";\n            renderer = new Renderer(canvas, dpr);\n            renderer.setup();\n            renderer.init();\n            resize();\n            if (renderer.test(fragmentShaderSource) === null) {\n                renderer.updateShader(fragmentShaderSource);\n            }\n            let lastRender = 0;\n            let animationFrameId;\n            const loop = {\n                \"FluidShader.useEffect.loop\": (now)=>{\n                    animationFrameId = requestAnimationFrame(loop);\n                    const delta = now - lastRender;\n                    if (delta < FRAME_INTERVAL) return;\n                    lastRender = now;\n                    renderer === null || renderer === void 0 ? void 0 : renderer.render(now);\n                }\n            }[\"FluidShader.useEffect.loop\"];\n            loop(0);\n            return ({\n                \"FluidShader.useEffect\": ()=>{\n                    window.removeEventListener(\"resize\", debouncedResize);\n                    cancelAnimationFrame(animationFrameId);\n                    renderer === null || renderer === void 0 ? void 0 : renderer.reset();\n                }\n            })[\"FluidShader.useEffect\"];\n        }\n    }[\"FluidShader.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        className: \"fixed inset-0 w-full h-full block\"\n    }, void 0, false, {\n        fileName: \"/Users/nitishkumar/Desktop/verbose-pancake/src/components/fluid-shader.tsx\",\n        lineNumber: 114,\n        columnNumber: 5\n    }, this);\n}\n_s(FluidShader, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = FluidShader;\nclass Renderer {\n    updateShader(source) {\n        this.reset();\n        this.setupShader(source);\n        this.init();\n    }\n    updateScale(scale) {\n        this.scale = scale;\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    }\n    compile(shader, source) {\n        this.gl.shaderSource(shader, source);\n        this.gl.compileShader(shader);\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error(this.gl.getShaderInfoLog(shader));\n        }\n    }\n    test(source) {\n        const gl = this.gl;\n        const shader = gl.createShader(gl.FRAGMENT_SHADER);\n        if (!shader) return \"Could not create shader\";\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        const log = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        return status ? null : log;\n    }\n    reset() {\n        const gl = this.gl;\n        if (this.program) {\n            gl.deleteProgram(this.program);\n            this.program = null;\n        }\n        if (this.buffer) {\n            gl.deleteBuffer(this.buffer);\n            this.buffer = null;\n        }\n    }\n    setupShader(fragmentSource) {\n        const gl = this.gl;\n        this.vs = gl.createShader(gl.VERTEX_SHADER);\n        this.fs = gl.createShader(gl.FRAGMENT_SHADER);\n        this.compile(this.vs, this.vertexSrc);\n        this.compile(this.fs, fragmentSource);\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, this.vs);\n        gl.attachShader(this.program, this.fs);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            console.error(gl.getProgramInfoLog(this.program));\n        }\n    }\n    setup() {\n        this.setupShader(this.vertexSrc);\n    }\n    init() {\n        const gl = this.gl;\n        if (!this.program) return;\n        this.buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n            -1,\n            1,\n            -1,\n            -1,\n            1,\n            1,\n            1,\n            -1\n        ]), gl.STATIC_DRAW);\n        const position = gl.getAttribLocation(this.program, \"position\");\n        gl.enableVertexAttribArray(position);\n        gl.vertexAttribPointer(position, 2, gl.FLOAT, false, 0, 0);\n    }\n    render(now) {\n        const gl = this.gl;\n        if (!this.program) return;\n        gl.useProgram(this.program);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        const resolutionLocation = gl.getUniformLocation(this.program, \"resolution\");\n        const timeLocation = gl.getUniformLocation(this.program, \"time\");\n        gl.uniform2f(resolutionLocation, this.canvas.width, this.canvas.height);\n        gl.uniform1f(timeLocation, now * 0.001);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n    constructor(canvas, scale){\n        this.vertexSrc = \"#version 300 es\\n  precision highp float;\\n  in vec4 position;\\n  void main() { gl_Position = position; }\";\n        this.program = null;\n        this.vs = null;\n        this.fs = null;\n        this.buffer = null;\n        this.canvas = canvas;\n        this.scale = scale;\n        const gl = canvas.getContext(\"webgl2\", {\n            powerPreference: \"low-power\",\n            antialias: false\n        });\n        if (!gl) throw new Error(\"WebGL2 not supported\");\n        this.gl = gl;\n        this.gl.getExtension('EXT_color_buffer_float');\n        this.gl.enable(this.gl.BLEND);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n    }\n}\nvar _c;\n$RefreshReg$(_c, \"FluidShader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/fluid-shader.tsx\n"));

/***/ })

});